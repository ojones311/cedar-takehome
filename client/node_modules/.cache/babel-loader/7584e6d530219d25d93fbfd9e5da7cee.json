{"ast":null,"code":"var _jsxFileName = \"/Users/owenjones/cedar-takehome/client/src/Components/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport SearchFilter from './SearchFilter';\nimport AppointmentCard from './AppointmentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  _s();\n\n  let {\n    appointments,\n    setAppointments\n  } = _ref;\n  const [input, setInput] = useState('');\n  const [filteredAppts, setFilteredAppts] = useState([]);\n\n  const resetFilteredAppts = () => {\n    setFilteredAppts(appointments);\n  };\n\n  const filterAppointments = input => {\n    let filteredList = appointments.filter(card => {\n      return card.doctorName.toLowerCase().includes(input);\n    });\n    setInput(input);\n    console.log(filteredList);\n    setFilteredAppts(filteredList);\n  }; // setFilteredAppts(appointments)\n\n\n  useEffect(() => {\n    resetFilteredAppts();\n  }); // const renderAppointments = () => {\n  //     if(filteredAppts.length < 1){\n  //        appointments.filter(elem => !elem.deleted).map((card) => (\n  //             <>\n  //                 <AppointmentCard\n  //                     setAppointments={setAppointments}\n  //                     appointments={appointments} \n  //                     id={card.id}\n  //                     doctorName={card.doctorName}\n  //                     patientName = {card.patientName}\n  //                     phoneNumber = {card.phoneNumber}\n  //                     email = {card.email}\n  //                     reasonForVisit = {card.reasonForVisit}\n  //                     deleted = {card.deleted}\n  //                 />\n  //             </>\n  //         ))\n  //     }else {\n  //        filteredAppts.filter(elem => !elem.deleted).map((card) => (\n  //             <>\n  //                 <AppointmentCard\n  //                     setAppointments={setAppointments}\n  //                     appointments={appointments} \n  //                     id={card.id}\n  //                     doctorName={card.doctorName}\n  //                     patientName = {card.patientName}\n  //                     phoneNumber = {card.phoneNumber}\n  //                     email = {card.email}\n  //                     reasonForVisit = {card.reasonForVisit}\n  //                     deleted = {card.deleted}\n  //                 />\n  //             </>\n  //         ))\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-body\",\n    children: [/*#__PURE__*/_jsxDEV(SearchFilter, {\n      input: input,\n      onChange: filterAppointments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), appointments && filteredAppts.filter(elem => !elem.deleted).map(card => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(AppointmentCard, {\n        setAppointments: setAppointments,\n        appointments: appointments,\n        id: card.id,\n        doctorName: card.doctorName,\n        patientName: card.patientName,\n        phoneNumber: card.phoneNumber,\n        email: card.email,\n        reasonForVisit: card.reasonForVisit,\n        deleted: card.deleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"PNSvIuv4a3Q/XbP44OCX8JrRDRw=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/owenjones/cedar-takehome/client/src/Components/Dashboard.jsx"],"names":["React","useEffect","useState","SearchFilter","AppointmentCard","Dashboard","appointments","setAppointments","input","setInput","filteredAppts","setFilteredAppts","resetFilteredAppts","filterAppointments","filteredList","filter","card","doctorName","toLowerCase","includes","console","log","elem","deleted","map","id","patientName","phoneNumber","email","reasonForVisit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AAEA,MAAMC,SAAS,GAAG,QAAqC;AAAA;;AAAA,MAApC;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,GAAoC;AAEnD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMU,kBAAkB,GAAG,MAAM;AAC7BD,IAAAA,gBAAgB,CAACL,YAAD,CAAhB;AACH,GAFD;;AAIA,QAAMO,kBAAkB,GAAIL,KAAD,IAAW;AAClC,QAAIM,YAAY,GAAGR,YAAY,CAACS,MAAb,CAAqBC,IAAD,IAAU;AAC7C,aAAOA,IAAI,CAACC,UAAL,CAAgBC,WAAhB,GAA8BC,QAA9B,CAAuCX,KAAvC,CAAP;AACH,KAFkB,CAAnB;AAGAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACAH,IAAAA,gBAAgB,CAACG,YAAD,CAAhB;AACH,GAPD,CATmD,CAkBnD;;;AACAb,EAAAA,SAAS,CAAC,MAAK;AACXW,IAAAA,kBAAkB;AACrB,GAFQ,CAAT,CAnBmD,CAsBnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEJ,KAArB;AAA4B,MAAA,QAAQ,EAAEK;AAAtC;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKP,YAAY,IAAII,aAAa,CAACK,MAAd,CAAqBO,IAAI,IAAI,CAACA,IAAI,CAACC,OAAnC,EAA4CC,GAA5C,CAAiDR,IAAD,iBAC7D;AAAA,6BACI,QAAC,eAAD;AACI,QAAA,eAAe,EAAET,eADrB;AAEI,QAAA,YAAY,EAAED,YAFlB;AAGI,QAAA,EAAE,EAAEU,IAAI,CAACS,EAHb;AAII,QAAA,UAAU,EAAET,IAAI,CAACC,UAJrB;AAKI,QAAA,WAAW,EAAID,IAAI,CAACU,WALxB;AAMI,QAAA,WAAW,EAAIV,IAAI,CAACW,WANxB;AAOI,QAAA,KAAK,EAAIX,IAAI,CAACY,KAPlB;AAQI,QAAA,cAAc,EAAIZ,IAAI,CAACa,cAR3B;AASI,QAAA,OAAO,EAAIb,IAAI,CAACO;AATpB;AAAA;AAAA;AAAA;AAAA;AADJ,qBADa,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAuBH,CAhFD;;GAAMlB,S;;KAAAA,S;AAkFN,eAAeA,SAAf","sourcesContent":["import React,{useEffect, useState} from 'react'\nimport SearchFilter from './SearchFilter'\nimport AppointmentCard from './AppointmentCard'\n\nconst Dashboard = ({appointments, setAppointments}) => {\n\n    const [input, setInput] = useState('')\n    const [filteredAppts, setFilteredAppts] = useState([])\n\n    const resetFilteredAppts = () => {\n        setFilteredAppts(appointments)\n    }\n\n    const filterAppointments = (input) => {\n        let filteredList = appointments.filter((card) => {\n            return card.doctorName.toLowerCase().includes(input)\n        })\n        setInput(input)\n        console.log(filteredList)\n        setFilteredAppts(filteredList)\n    }\n    \n    // setFilteredAppts(appointments)\n    useEffect(()=> {\n        resetFilteredAppts()\n    })\n    // const renderAppointments = () => {\n    //     if(filteredAppts.length < 1){\n    //        appointments.filter(elem => !elem.deleted).map((card) => (\n    //             <>\n    //                 <AppointmentCard\n    //                     setAppointments={setAppointments}\n    //                     appointments={appointments} \n    //                     id={card.id}\n    //                     doctorName={card.doctorName}\n    //                     patientName = {card.patientName}\n    //                     phoneNumber = {card.phoneNumber}\n    //                     email = {card.email}\n    //                     reasonForVisit = {card.reasonForVisit}\n    //                     deleted = {card.deleted}\n    //                 />\n    //             </>\n    //         ))\n    //     }else {\n    //        filteredAppts.filter(elem => !elem.deleted).map((card) => (\n    //             <>\n    //                 <AppointmentCard\n    //                     setAppointments={setAppointments}\n    //                     appointments={appointments} \n    //                     id={card.id}\n    //                     doctorName={card.doctorName}\n    //                     patientName = {card.patientName}\n    //                     phoneNumber = {card.phoneNumber}\n    //                     email = {card.email}\n    //                     reasonForVisit = {card.reasonForVisit}\n    //                     deleted = {card.deleted}\n    //                 />\n    //             </>\n    //         ))\n    //     }\n    // }\n    return (\n        \n        <div className='main-body'>\n            <SearchFilter input={input} onChange={filterAppointments}/>\n            \n            {/* {renderAppointments()} */}\n            {appointments && filteredAppts.filter(elem => !elem.deleted).map((card) => (\n                <>\n                    <AppointmentCard\n                        setAppointments={setAppointments}\n                        appointments={appointments} \n                        id={card.id}\n                        doctorName={card.doctorName}\n                        patientName = {card.patientName}\n                        phoneNumber = {card.phoneNumber}\n                        email = {card.email}\n                        reasonForVisit = {card.reasonForVisit}\n                        deleted = {card.deleted}\n                    />\n                </>\n            ))}\n        </div>\n    )\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}