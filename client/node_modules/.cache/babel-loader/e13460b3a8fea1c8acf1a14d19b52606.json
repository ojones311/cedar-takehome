{"ast":null,"code":"import _toConsumableArray from\"/Users/owenjones/cedar-takehome/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/owenjones/cedar-takehome/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'../Styles/AppointmentCard.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AppointmentCard=function AppointmentCard(_ref){var setAppointments=_ref.setAppointments,appointments=_ref.appointments,id=_ref.id,doctorName=_ref.doctorName,patientName=_ref.patientName,phoneNumber=_ref.phoneNumber,email=_ref.email,reasonForVisit=_ref.reasonForVisit,deleted=_ref.deleted;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),allowEdit=_useState2[0],setAllowEdit=_useState2[1];var _useState3=useState(doctorName),_useState4=_slicedToArray(_useState3,2),newDoctorName=_useState4[0],setNewDoctorName=_useState4[1];var _useState5=useState(patientName),_useState6=_slicedToArray(_useState5,2),newPatientName=_useState6[0],setNewPatientName=_useState6[1];var _useState7=useState(phoneNumber),_useState8=_slicedToArray(_useState7,2),newPhoneNumber=_useState8[0],setNewPhoneNumber=_useState8[1];var _useState9=useState(email),_useState10=_slicedToArray(_useState9,2),newEmail=_useState10[0],setNewEmail=_useState10[1];var _useState11=useState(reasonForVisit),_useState12=_slicedToArray(_useState11,2),newReasonForVisit=_useState12[0],setNewReasonForVisit=_useState12[1];var editAppointment=function editAppointment(){setAllowEdit(!allowEdit);};var clearInputs=function clearInputs(){setNewDoctorName(doctorName);setNewPatientName(patientName);setNewPhoneNumber(phoneNumber);setNewEmail(email);setNewReasonForVisit(reasonForVisit);};var updateAppointment=function updateAppointment(appt,id){var index=appointments.findIndex(function(card){return card.id===id;});var newApptList=_toConsumableArray(appointments);newApptList[index]=appt;setAppointments(newApptList);};var handleEditSubmission=function handleEditSubmission(e){e.preventDefault();var editedAppointment={id:id,doctorName:newDoctorName,email:newEmail,patientName:newPatientName,phoneNumber:newPhoneNumber,reasonForVisit:newReasonForVisit,deleted:false};updateAppointment(editedAppointment,editedAppointment.id);setAllowEdit(!allowEdit);clearInputs();};var deleteAppointmentCard=function deleteAppointmentCard(id){console.log('deleted',id);console.log(appointments);var remainingAppointments=appointments.filter(function(card){return id!==card.id;});// deleted = true\nconsole.log(remainingAppointments);setAppointments(remainingAppointments);};return/*#__PURE__*/_jsxs(\"div\",{className:\"appt-card\",children:[/*#__PURE__*/_jsx(\"p\",{children:doctorName}),/*#__PURE__*/_jsx(\"p\",{children:patientName}),/*#__PURE__*/_jsx(\"p\",{children:phoneNumber}),/*#__PURE__*/_jsx(\"p\",{children:email}),/*#__PURE__*/_jsx(\"p\",{children:reasonForVisit}),/*#__PURE__*/_jsx(\"button\",{onClick:editAppointment,children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return deleteAppointmentCard(id);},children:\"Delete\"}),allowEdit&&/*#__PURE__*/_jsxs(\"form\",{id:\"edit-appt\",onSubmit:handleEditSubmission,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"docname\",name:'edit-docname',placeholder:'doctorName',value:newDoctorName,onChange:function onChange(e){return setNewDoctorName(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"patient\",id:\"patientname\",placeholder:\"Patient Name\",onChange:function onChange(e){return setNewPatientName(e.target.value);},value:newPatientName}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"phone\",id:\"phone\",placeholder:\"Phone Number\",onChange:function onChange(e){return setNewPhoneNumber(e.target.value);},value:newPhoneNumber}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"email\",id:\"email\",placeholder:\"Email\",onChange:function onChange(e){return setNewEmail(e.target.value);},value:newEmail}),/*#__PURE__*/_jsxs(\"select\",{name:\"visit-reason\",value:newReasonForVisit,onChange:function onChange(e){return setNewReasonForVisit(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:'Reason for visit'}),/*#__PURE__*/_jsx(\"option\",{children:'Sick'}),/*#__PURE__*/_jsx(\"option\",{children:'Emergency'}),/*#__PURE__*/_jsx(\"option\",{children:'Check-up'}),/*#__PURE__*/_jsx(\"option\",{children:'Physical'}),/*#__PURE__*/_jsx(\"option\",{children:'Referral'})]}),/*#__PURE__*/_jsx(\"button\",{children:\"Submit\"})]})]});};export default AppointmentCard;","map":{"version":3,"sources":["/Users/owenjones/cedar-takehome/client/src/Components/AppointmentCard.jsx"],"names":["React","useState","AppointmentCard","setAppointments","appointments","id","doctorName","patientName","phoneNumber","email","reasonForVisit","deleted","allowEdit","setAllowEdit","newDoctorName","setNewDoctorName","newPatientName","setNewPatientName","newPhoneNumber","setNewPhoneNumber","newEmail","setNewEmail","newReasonForVisit","setNewReasonForVisit","editAppointment","clearInputs","updateAppointment","appt","index","findIndex","card","newApptList","handleEditSubmission","e","preventDefault","editedAppointment","deleteAppointmentCard","console","log","remainingAppointments","filter","target","value"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport '../Styles/AppointmentCard.css'\n\nconst AppointmentCard = ({setAppointments, appointments, id, doctorName, patientName, phoneNumber, email, reasonForVisit,deleted}) => {\n\n    const [allowEdit,setAllowEdit] = useState(false)\n    const [newDoctorName, setNewDoctorName] = useState(doctorName)\n    const [newPatientName, setNewPatientName] = useState(patientName)\n    const [newPhoneNumber, setNewPhoneNumber] = useState(phoneNumber)\n    const [newEmail, setNewEmail] = useState(email)\n    const [newReasonForVisit, setNewReasonForVisit] = useState(reasonForVisit)\n\n    const editAppointment = () => {\n        setAllowEdit(!allowEdit)\n    }\n    const clearInputs = () => {\n        setNewDoctorName(doctorName)\n        setNewPatientName(patientName)\n        setNewPhoneNumber(phoneNumber)\n        setNewEmail(email)\n        setNewReasonForVisit(reasonForVisit)   \n    }\n    const updateAppointment = (appt,id) => {\n        let index = appointments.findIndex(card => card.id === id)\n        const newApptList = [...appointments] \n        newApptList[index] = appt\n        setAppointments(newApptList)\n    }\n    const handleEditSubmission = (e) => {\n        e.preventDefault()\n        let editedAppointment = {\n            id: id,\n            doctorName: newDoctorName,\n            email: newEmail,\n            patientName: newPatientName,\n            phoneNumber: newPhoneNumber,\n            reasonForVisit: newReasonForVisit,\n            deleted: false\n        }\n        updateAppointment(editedAppointment, editedAppointment.id)\n        setAllowEdit(!allowEdit)\n        clearInputs()\n    }\n\n    const deleteAppointmentCard = (id) => {\n        console.log('deleted',id)\n        console.log(appointments)\n        const remainingAppointments = appointments.filter(card => id !== card.id)\n        // deleted = true\n        console.log(remainingAppointments)\n        setAppointments(remainingAppointments)\n    }\n    return (\n        <div className='appt-card'>\n            <p>{doctorName}</p>\n            <p>{patientName}</p>\n            <p>{phoneNumber}</p>\n            <p>{email}</p>\n            <p>{reasonForVisit}</p>\n            <button onClick={editAppointment}>Edit</button>\n            <button onClick={() => deleteAppointmentCard(id)}>Delete</button>\n\n            {allowEdit && \n            <form id='edit-appt' onSubmit={handleEditSubmission}>\n                <input \n                    type='text'\n                    id='docname'\n                    name={'edit-docname'}\n                    placeholder={'doctorName'}\n                    value={newDoctorName}\n                    onChange={(e) => setNewDoctorName(e.target.value)}\n                />\n                <input \n                    type='text' \n                    name='patient' \n                    id='patientname' \n                    placeholder='Patient Name'\n                    onChange = {(e) => setNewPatientName(e.target.value)} \n                    value={newPatientName}\n                />\n                <input \n                    type='text' \n                    name='phone' \n                    id='phone' \n                    placeholder='Phone Number' \n                    onChange = {(e) => setNewPhoneNumber(e.target.value)}\n                    value={newPhoneNumber}\n                />\n                <input \n                    type='text' \n                    name='email' \n                    id='email' \n                    placeholder='Email' \n                    onChange = {(e) => setNewEmail(e.target.value)}\n                    value={newEmail}\n                />\n                <select \n                    name='visit-reason'\n                    value={newReasonForVisit}\n                    onChange={(e) => setNewReasonForVisit(e.target.value)}\n                    >\n                    <option value='' >{'Reason for visit'}</option>\n                    <option>{'Sick'}</option>\n                    <option>{'Emergency'}</option>\n                    <option>{'Check-up'}</option>\n                    <option>{'Physical'}</option> \n                    <option>{'Referral'}</option>\n                </select>\n                <button>Submit</button>\n            </form>\n            \n            }\n        </div>\n    )\n}\n\nexport default AppointmentCard "]},"metadata":{},"sourceType":"module"}